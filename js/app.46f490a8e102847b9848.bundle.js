(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,a,t)=>{const r=t(377),s=t(613),{lightningChart:n,emptyFill:i,Themes:d,AxisTickStrategies:o}=r,{createProgressiveTraceGenerator:l}=s,g=n({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).ChartXY({theme:d[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("Drag & drop Y axes to rearrange");g.getDefaultAxisX().setTickStrategy(o.Time),g.getDefaultAxisY().dispose();let c=new Array(5).fill(0).map(((e,a,t)=>{const r=`Channel #${a+1}`,s=t.length-(a+1),n=g.addAxisY({iStack:s}).setMargins(5,5),d=g.addPointLineAreaSeries({axisY:n,dataPattern:"ProgressiveX",automaticColorIndex:a}).setName(r).setAreaFillStyle(i);return l().setNumberOfPoints(1e5).generate().toPromise().then((e=>{d.add(e)})),d.addEventListener("visiblechange",(e=>{const{isVisible:a}=e;n.setVisible(a)})),n.setUserInteractions({rectangleZoom:!1}),n.draggable=!0,n.addEventListener("dragstart",(e=>{e.dataTransfer&&(e.dataTransfer.setData("text",JSON.stringify({name:r})),e.dataTransfer.setDragImage(new Image,0,0))})),n.addEventListener("dragover",(e=>{e.preventDefault()})),n.addEventListener("drop",(e=>{if(!e.dataTransfer)return;const a=JSON.parse(e.dataTransfer.getData("text")).name;if(!a)return;const t=c.find((e=>e.name===a));g.swapAxes(n,t.axisY)})),{name:r,axisY:n,lineSeries:d}}))}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);